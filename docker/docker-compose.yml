version: '3'
services:
  # Web server
  webserver:
    build:
      context: ./front-server/
      dockerfile: Dockerfile
      args:
        - mode
        - project_id
    container_name: webserver
    restart: unless-stopped
    tty: true
    environment:
      - PROJECT_ID=${PROJECT_ID}
      - ENV=${ENV}
      - WEB_URL=${WEB_URL}
    ports:
      - "8080:8080"
    volumes:
      - ../.env:/.env
      - ..:/usr/share/nginx/project
    networks:
      - app-network

  # Backoffice server
  boserver:
    build:
      context: ./bo-server/
      dockerfile: Dockerfile
      args:
        - mode
        - project_id
    container_name: boserver
    restart: unless-stopped
    tty: true
    environment:
      - PROJECT_ID=${PROJECT_ID}
      - ENV=${ENV}
      - BO_URL=${BO_URL}
    ports:
      - "8081:8081"
    volumes:
      - ../.env:/.env
      - ..:/usr/share/nginx/project
    networks:
      - app-network

  # Web server
  proxyserver:
    build:
      context: ./proxy-server/
      dockerfile: Dockerfile
      args:
        - mode
        - project_id
    container_name: proxyserver
    restart: unless-stopped
    tty: true
    environment:
      - PROJECT_ID=${PROJECT_ID}
      - ENV=${ENV}
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../.env:/.env
    networks:
      - app-network
    depends_on:
      - webserver
      - boserver

  # Backoffice server
  apiserver:
    build:
      context: ./api-server/
      dockerfile: Dockerfile
      args:
        - mode
        - project_id
    container_name: apiserver
    restart: unless-stopped
    tty: true
    environment:
      - PROJECT_ID=${PROJECT_ID}
      - ENV=${ENV}
      - BO_URL=${BO_URL}
      - WEB_URL=${WEB_URL}
      - API_URL=${API_URL}
    ports:
      - "3000:3000"
    volumes:
      - ../.env:/.env
      - ..:/usr/share/nginx/project
    networks:
      - app-network

  db:
    build:
      context: ./db/
      dockerfile: Dockerfile
      args:
        - mode
        - project_id
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql

# Docker Networks
networks:
  app-network:
    driver: bridge

# Volumes
volumes:
  mysqldata:
    driver: local

